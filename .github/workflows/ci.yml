name: CI

on:
  pull_request:
  push:

defaults:
  run:
    shell: 'bash -Eeuo pipefail -x {0}'

jobs:

  test:
    strategy:
      matrix:
        go:
          # https://github.com/actions/setup-go/tree/v5#getting-go-version-from-the-gomod-file
          # https://github.com/actions/setup-go/tree/v5#using-stableoldstable-aliases
          - stable
          - oldstable
          - go.mod
    name: Test (${{ matrix.go }})
    runs-on: ubuntu-latest
    steps:
      - name: system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends libpcsclite-dev pcscd
          # https://salsa.debian.org/debian/pcsc-lite/-/blob/9eece21e6ec7f9ea767c24c103d390c31eb628aa/doc/README.polkit#L35-40
          user="$(id -un)"
          sudo tee /etc/polkit-1/rules.d/yubikeys.rules <<EOF
            polkit.addRule(function(action, subject) {
                if (
                  action.id == "org.debian.pcsc-lite.access_pcsc"
                  && subject.user == "$user"
                ) {
                    return polkit.Result.YES;
                }
            });
          EOF
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version:      ${{ matrix.go != 'go.mod' && matrix.go || null }}
          go-version-file: ${{ matrix.go == 'go.mod' && matrix.go || null }}
          cache-dependency-path: go.sum
      - name: build
        run: go build -o yubecdsa -trimpath -ldflags '-w' -v .
      - run: ./yubecdsa --help
      - run: ./yubecdsa list
      # TODO figure out if there's like, a YubiKey emulator we can use for real testing here?
